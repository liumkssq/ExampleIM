version: "3.8"

services:
  etcd:
    image: bitnami/etcd:latest
    container_name: etcd
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
    ports:
      - "12379:2379"
    volumes:
      - ./components/etcd/data:/bitnami/etcd/data
      - ./components/etcd/logs:/bitnami/etcd/logs
    networks:
      - easy-chat

  mysql:
    image: mysql:5.7
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: easy-chat
    ports:
      - "13306:3306"
    volumes:
      - ./script/mysql/:/docker-entrypoint-initdb.d/
      - ./components/mysql/data:/var/lib/mysql
      - /etc/localtime:/etc/localtime
    networks:
      - easy-chat

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "16379:6379"
    volumes:
      - ./components/redis/data:/data
      - ./components/redis/config/redis.conf:/usr/local/redis/config/redis.conf
    networks:
      - easy-chat
    command: redis-server --requirepass easy-chat --appendonly yes

  mongo:
    image: mongo:4.0
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: easy-chat
    ports:
      - "47017:27017"
    volumes:
      - ./components/mongo/data:/data/db
      - /etc/localtime:/etc/localtime
    #    restart: always
    networks:
      - easy-chat
  kafka:
    image: 'bitnami/kafka:3.6.0'
    container_name: kafka
    ports:
      - '9092:9092'
      - '9094:9094'
    environment:
      - KAFKA_CFG_NODE_ID=0
      #      - 三个分区
      - KAFKA_CREATE_TOPICS=webook_binlog:3:1
      #      - 允许自动创建 topic，线上不要开启
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092,CONTROLLER://:9093,EXTERNAL://0.0.0.0:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - easy-chat
  jeager:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "9411:9411"
    networks:
      - easy-chat

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - "xpack.security.enabled=false"
      - "ES_JAVA_OPTS=-Xms84m -Xmx512m"
    ports:
      - "9200:9200"

  logstash:
    image: docker.elastic.co/logstash/logstash:7.13.0
    volumes:
      - ./components/logstash:/usr/share/logstash/pipeline
      - ./components/logstash/pipeline/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      #      - ./logstash-logs:/usr/share/logstash/logs
      #      - ./app.log:/usr/share/logstash/app.log
      - ./components/logstash/log/comment.log:/usr/share/logstash/comment.log
    environment:
      - "xpack.monitoring.elasticsearch.hosts=http://elasticsearch:9200"
    ports:
      - 5044:5044

  kibana:
    #    注意检查你的 ElasticSearch 版本，这边我将 ES 也改到了这个版本
    image: docker.elastic.co/kibana/kibana:7.13.0
    volumes:
      - ./components/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - i18n.locale=zh-CN
    ports:
      - "5601:5601"
  prometheus:
    image: prom/prometheus:v2.47.2
    volumes:
      #      - 将本地的 prometheus 文件映射到容器内的配置文件
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      #      - 访问数据的端口
      - 9090:9090
    command:
      - "--web.enable-remote-write-receiver"
      - "--config.file=/etc/prometheus/prometheus.yml"
  grafana:
    image: grafana/grafana-enterprise:10.2.0
    ports:
      - 3000:3000
  zipkin:
    #    用的是不支持 Kafka 之类的简化版本
    image: openzipkin/zipkin-slim:2.24
    ports:
      - '9411:9411'

volumes:
  etcd_data:
  mysql_data:
  redis_data:
  mongo_data:
  kafka_data:


networks:
  easy-chat:
    driver: bridge
