name: CD

on:
  push:
    tags:
      - 'v*'

env:
  DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [user, social, im, task]

    steps:
    - uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ secrets.DOCKER_REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract version
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./apps/${{ matrix.service }}/Dockerfile
        push: true
        tags: |
          ${{ env.DOCKER_REGISTRY }}/${{ matrix.service }}:${{ steps.version.outputs.VERSION }}
          ${{ env.DOCKER_REGISTRY }}/${{ matrix.service }}:latest
        cache-from: type=registry,ref=${{ env.DOCKER_REGISTRY }}/${{ matrix.service }}:buildcache
        cache-to: type=registry,ref=${{ env.DOCKER_REGISTRY }}/${{ matrix.service }}:buildcache,mode=max

    - name: Deploy to Production
      env:
        KUBECONFIG: ${{ secrets.KUBECONFIG }}
      run: |
        echo "$KUBECONFIG" > kubeconfig.yaml
        kubectl --kubeconfig=kubeconfig.yaml set image deployment/${{ matrix.service }} \
          ${{ matrix.service }}=${{ env.DOCKER_REGISTRY }}/${{ matrix.service }}:${{ steps.version.outputs.VERSION }}
        rm kubeconfig.yaml 